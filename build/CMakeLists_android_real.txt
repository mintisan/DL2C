cmake_minimum_required(VERSION 3.18)

project(DL2C_Android_Real_ONNX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# 设置C标准
set(CMAKE_C_STANDARD 99)
set(CMAKE_C_STANDARD_REQUIRED ON)

# Android 特定设置
set(CMAKE_SYSTEM_NAME Android)
set(CMAKE_SYSTEM_VERSION 21)
set(CMAKE_ANDROID_ARCH_ABI arm64-v8a)

# ONNX Runtime Android 路径
set(ONNXRUNTIME_ROOT "/Users/mintisan/Workplaces/onnxruntime")
set(ONNXRUNTIME_BUILD_DIR "${ONNXRUNTIME_ROOT}/build/Android/Release")
set(ONNXRUNTIME_INCLUDE_DIR "${ONNXRUNTIME_ROOT}/include")

# 包含目录
include_directories(${ONNXRUNTIME_INCLUDE_DIR})
include_directories(${ONNXRUNTIME_INCLUDE_DIR}/onnxruntime)
include_directories(${ONNXRUNTIME_INCLUDE_DIR}/onnxruntime/core/session)

# 源文件
set(INFERENCE_SOURCES 
    ../../inference/android_real_onnx_inference.cpp
)

# 创建可执行文件
add_executable(android_real_onnx_inference ${INFERENCE_SOURCES})

# ONNX Runtime 核心库（按依赖顺序）
set(ONNXRUNTIME_LIBS
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_session.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_providers.a  
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_framework.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_graph.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_optimizer.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_util.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_mlas.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_common.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_flatbuffers.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_lora.a
)

# ONNX Protocol Buffer 库
set(ONNX_LIBS
    ${ONNXRUNTIME_BUILD_DIR}/_deps/onnx-build/libonnx.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/onnx-build/libonnx_proto.a
)

# 基础第三方库
set(BASIC_THIRD_PARTY_LIBS
    ${ONNXRUNTIME_BUILD_DIR}/_deps/protobuf-build/libprotobuf-lite.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/pytorch_cpuinfo-build/libcpuinfo.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/re2-build/libre2.a
)

# Abseil C++ 核心库（最重要的）
set(ABSEIL_CORE_LIBS
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/container/libabsl_raw_hash_set.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/strings/libabsl_strings.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/strings/libabsl_strings_internal.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/strings/libabsl_string_view.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/strings/libabsl_str_format_internal.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/base/libabsl_base.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/base/libabsl_log_severity.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/base/libabsl_raw_logging_internal.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/base/libabsl_throw_delegate.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/base/libabsl_spinlock_wait.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/synchronization/libabsl_synchronization.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/synchronization/libabsl_graphcycles_internal.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/synchronization/libabsl_kernel_timeout_internal.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/time/libabsl_time.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/time/libabsl_civil_time.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/time/libabsl_time_zone.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/hash/libabsl_hash.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/hash/libabsl_city.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/hash/libabsl_low_level_hash.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/numeric/libabsl_int128.a
)

# Abseil C++ 日志库（解决日志相关的链接错误）
set(ABSEIL_LOG_LIBS
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/log/libabsl_log_internal_message.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/log/libabsl_log_internal_format.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/log/libabsl_log_internal_globals.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/log/libabsl_log_internal_log_sink_set.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/log/libabsl_log_sink.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/log/libabsl_log_globals.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/log/libabsl_log_internal_proto.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/log/libabsl_log_internal_structured_proto.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/log/libabsl_log_internal_nullguard.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/log/libabsl_log_internal_check_op.a
)

# Abseil C++ 字符串和容器库
set(ABSEIL_CONTAINER_LIBS
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/container/libabsl_hashtablez_sampler.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/strings/libabsl_cord.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/strings/libabsl_cord_internal.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/strings/libabsl_cordz_functions.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/strings/libabsl_cordz_handle.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/strings/libabsl_cordz_info.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/profiling/libabsl_exponential_biased.a
)

# Abseil C++ 调试和其他库
set(ABSEIL_OTHER_LIBS
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/debugging/libabsl_stacktrace.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/debugging/libabsl_symbolize.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/debugging/libabsl_debugging_internal.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/debugging/libabsl_demangle_internal.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/debugging/libabsl_demangle_rust.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/debugging/libabsl_examine_stack.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/debugging/libabsl_leak_check.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/debugging/libabsl_utf8_for_code_point.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/base/libabsl_malloc_internal.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/base/libabsl_strerror.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/abseil_cpp-build/absl/base/libabsl_tracing_internal.a
)

# 链接所有库（顺序很重要）
target_link_libraries(android_real_onnx_inference 
    ${ONNXRUNTIME_LIBS}
    ${ONNX_LIBS}
    ${BASIC_THIRD_PARTY_LIBS}
    ${ABSEIL_CORE_LIBS}
    ${ABSEIL_LOG_LIBS}
    ${ABSEIL_CONTAINER_LIBS}
    ${ABSEIL_OTHER_LIBS}
    log
    m
    dl
    -static-libgcc
    -static-libstdc++
)

# 输出目录
set_target_properties(android_real_onnx_inference
    PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY "../../android_executables/arm64-v8a"
)

# 编译选项
target_compile_options(android_real_onnx_inference PRIVATE
    -ffunction-sections
    -fdata-sections
    -DONNX_MINIMAL_BUILD
    -DORT_MINIMAL_BUILD
    -Os  # 优化大小
)

# 链接选项
target_link_options(android_real_onnx_inference PRIVATE
    -Wl,--gc-sections
    -Wl,--strip-all
    -static-libstdc++
)

# ========================================================
# Android C 版本配置
# ========================================================

# C版本源文件
set(C_INFERENCE_SOURCES 
    ../../inference/android_real_onnx_inference.c
)

# 创建C版本可执行文件（需要用C++链接器链接ONNX Runtime）
add_executable(android_real_onnx_inference_c ${C_INFERENCE_SOURCES})
set_target_properties(android_real_onnx_inference_c PROPERTIES
    LINKER_LANGUAGE CXX  # 使用C++链接器，因为ONNX Runtime是C++库
)

# C版本链接所有必需的ONNX Runtime库
target_link_libraries(android_real_onnx_inference_c
    # ONNX Runtime 核心库（按正确的链接顺序）
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_session.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_providers.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_framework.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_graph.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_optimizer.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_util.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_mlas.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_common.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_lora.a
    ${ONNXRUNTIME_BUILD_DIR}/libonnxruntime_flatbuffers.a
    
    # ONNX协议库
    ${ONNXRUNTIME_BUILD_DIR}/_deps/onnx-build/libonnx.a
    ${ONNXRUNTIME_BUILD_DIR}/_deps/onnx-build/libonnx_proto.a
    
    # Protocol Buffers
    ${ONNXRUNTIME_BUILD_DIR}/_deps/protobuf-build/libprotobuf-lite.a
    
    # 系统和硬件检测库
    ${ONNXRUNTIME_BUILD_DIR}/_deps/pytorch_cpuinfo-build/libcpuinfo.a
    
    # 正则表达式库
    ${ONNXRUNTIME_BUILD_DIR}/_deps/re2-build/libre2.a
    
    # Google Abseil C++ 库（使用已定义的变量，与C++版本一致）
    ${ABSEIL_CORE_LIBS}
    ${ABSEIL_LOG_LIBS}
    ${ABSEIL_CONTAINER_LIBS}
    ${ABSEIL_OTHER_LIBS}
    log
    m
    dl
    -static-libgcc
    -static-libstdc++
)

# C版本输出目录
set_target_properties(android_real_onnx_inference_c
    PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY "../../android_executables/arm64-v8a"
)

# C版本编译选项
target_compile_options(android_real_onnx_inference_c PRIVATE
    -ffunction-sections
    -fdata-sections
    -DONNX_MINIMAL_BUILD
    -DORT_MINIMAL_BUILD
    -Os  # 优化大小
    -std=c99
)

# C版本链接选项（需要C++链接器支持）
target_link_options(android_real_onnx_inference_c PRIVATE
    -Wl,--gc-sections
    -Wl,--strip-all
    -static-libstdc++
    -static-libgcc
) 